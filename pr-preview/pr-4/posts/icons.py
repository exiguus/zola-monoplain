from shutil import copyfile
import xml.etree.ElementTree as ET

def extract_ids_from_svg(file_path):
    # Parse the SVG file
    tree = ET.parse(file_path)
    root = tree.getroot()
    
    # Namespace dictionary to handle SVG namespaces
    namespaces = {'svg': 'http://www.w3.org/2000/svg'}
    
    # List to hold all extracted IDs
    ids = []
    
    # Find all elements with an 'id' attribute
    for elem in root.findall('.//*[@id]', namespaces):
        ids.append(elem.attrib['id'])
    
    return ids

# copy svg sprite from ../../static/images/
copyfile('../../static/images/tabler-sprite.svg', './icons.svg')

file_path = 'icons.svg'
ids = extract_ids_from_svg(file_path)

markdown = '''
+++
title = "Icons"
description = "Icons by Example"
date = 2024-06-09
authors = ["Simon Gattner"]
[taxonomies]
tags= ["Zola", "Markdown", "Icons"]
+++

## Introduction

Icons are a great way to add visual interest to your website. They can be used to represent different types of content, actions, or information. In this post, I will show you how to use icons in Zola.

## Implementation

This theme use the [Tabler Icons](https://tabler.io/) icon set. Tabler Icons is a set of over 700 free MIT-licensed high-quality SVG icons for you to use in your web projects.

To use an icon in your content, you can use the `icon` shortcode. The `icon` shortcode takes the name of the icon as an argument and renders the SVG icon.

Here is an example of how to use the `icon` shortcode:

```md
\{\{ icon(name="activity") \}\}
```

Please note that the shortcode normally start and end with `{{` and `}}`. But in this example the shortcode start and end with `\{\{` and `\}\}`. This is necessary to render the shortcode in the Markdown file.

This will render the GitHub icon. You can find a list of all available icons on the [Tabler Icons website](https://tabler.io/icons).

## Example

Here is an example of how to use the `icon` shortcode to render the GitHub icon:

{{ icon(name="activity") }} is `\{\{ icon(name="activity") \}\}` in a Markdown file.

Please note that the shortcode normally start and end with `{{` and `}}`. But in this example the shortcode start and end with `\{\{` and `\}\}`. This is necessary to render the shortcode in the Markdown file.

This theme use the [SVG sprite version](https://tabler.io/docs/icons/sprite) of the Tabler Icons. The SVG sprite version is a single SVG file that contains all the icons in the set. This is a more efficient way to load icons on your website as it reduces the number of HTTP requests.

## Icons

A list of all available icons in the Tabler Icons set:

'''

# Print the extracted IDs
i = 0
for svg_id in ids:
    i = i + 1
    id = svg_id.replace('tabler-', '')
    markdown += f"{i}. {{{{ icon(name=\"{id}\",size=16) }}}} {{{{ icon(name=\"{id}\",size=32) }}}} {{{{ icon(name=\"{id}\",size=48) }}}} { id }\n"
markdown += '''

## Generated

This Markdown file was generated by [`icons.py`](../icons.py). It uses the [`icons.svg`](../icons.svg) file to extract the list of available icons.

'''

with open('icons.md', 'w') as file:
    file.write(markdown)

print("Extracted a list of all icons from `icons.svg` and save a post in `icons.md`.")
